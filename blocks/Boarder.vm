function Boarder.new 0
push constant 1
call Memory.alloc 1
pop pointer 0
push argument 0
push constant 1
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 156
pop static 0
push constant 0
pop static 5
push constant 159
pop static 1
push constant 250
pop static 6
push constant 356
pop static 2
push constant 3
pop static 7
push constant 353
pop static 3
push constant 0
pop static 8
push constant 356
pop static 4
push constant 250
pop static 9
push constant 0
not
call Screen.setColor 1
pop temp 0
push static 0
push static 5
push static 1
push static 6
call Screen.drawRectangle 4
pop temp 0
push static 0
push static 5
push static 2
push static 7
call Screen.drawRectangle 4
pop temp 0
push static 3
push static 8
push static 4
push static 9
call Screen.drawRectangle 4
pop temp 0
push constant 156
push constant 251
push constant 356
push constant 255
call Screen.drawRectangle 4
pop temp 0
label IF_FALSE0
push argument 0
push constant 2
eq
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push constant 210
pop static 0
push constant 40
pop static 5
push constant 214
pop static 1
push constant 180
pop static 6
push constant 264
pop static 2
push constant 50
pop static 7
push constant 256
pop static 3
push constant 40
pop static 8
push constant 265
pop static 4
push constant 180
pop static 9
label IF_FALSE1
push pointer 0
return
function Boarder.bounceWall 5
push argument 0
pop pointer 0
push constant 1
pop local 4
push argument 2
push argument 3
sub
push constant 1
sub
pop local 2
push argument 2
push argument 3
add
push constant 1
add
pop local 3
push argument 1
push argument 3
sub
push constant 1
sub
pop local 0
push argument 1
push argument 3
add
push constant 1
add
pop local 1
push local 0
push static 1
lt
push local 1
push static 3
gt
or
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push local 4
push constant 2
call Math.multiply 2
pop local 4
label IF_FALSE0
push local 2
push static 7
lt
push local 3
push static 6
gt
or
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push local 4
push constant 3
call Math.multiply 2
pop local 4
label IF_FALSE1
push local 4
return
function Boarder.dispose 0
push argument 0
pop pointer 0
push pointer 0
call Memory.deAlloc 1
pop temp 0
push constant 0
return
